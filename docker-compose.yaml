version: '3.1'

services:

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    expose:
      - 27017
    ports:
      - '27018:27017'

  zookeeper:
    image: bitnami/zookeeper
    #restart: always
    expose:
      - 2181
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: bitnami/kafka
    expose:
      - 9092
    ports:
      - '9093:9092'
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper

  redis:
    image: docker.io/bitnami/redis:7.4
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6380:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

  crawler-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MODULE_NAME=crawlerService
        - SOURCE_ROOT=crawler
        - SERVICE_NAME=crawler_service
    depends_on:
      - mongo
      - redis
      - kafka
    ports:
      - "8082:8080"
    env_file:
      - env/development.env

  document-service:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MODULE_NAME=docService
        - SOURCE_ROOT=document
        - SERVICE_NAME=doc_service
    depends_on:
      - mongo
      - kafka
    env_file:
      - env/development.env

  refresher-tasks:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - MODULE_NAME=refresher
        - SOURCE_ROOT=refresher
        - SERVICE_NAME=refresher_tasks
    depends_on:
      - mongo
      - redis
      - kafka
    env_file:
      - env/development.env

volumes:
  redis_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local